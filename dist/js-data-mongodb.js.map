{"version":3,"file":"js-data-mongodb.js","sources":["../src/index.js"],"sourcesContent":["const mongodb = require('mongodb')\nconst MongoClient = mongodb.MongoClient\nconst bson = require('bson')\nconst ObjectID = bson.ObjectID\nconst JSData = require('js-data')\nconst underscore = require('mout/string/underscore')\nconst { DSUtils } = JSData\n\nconst reserved = [\n  'orderBy',\n  'sort',\n  'limit',\n  'offset',\n  'skip',\n  'where'\n]\n\nfunction Defaults () {}\n\nDefaults.prototype.translateId = true\nDefaults.prototype.mongoDriverOpts = { ignoreUndefined: true }\n\nconst addHiddenPropsToTarget = function (target, props) {\n  DSUtils.forOwn(props, function (value, key) {\n    props[key] = {\n      writable: true,\n      value\n    }\n  })\n  Object.defineProperties(target, props)\n}\n\nconst fillIn = function (dest, src) {\n  DSUtils.forOwn(src, function (value, key) {\n    if (!dest.hasOwnProperty(key) || dest[key] === undefined) {\n      dest[key] = value\n    }\n  })\n}\n\nfunction unique (array) {\n  const seen = {}\n  const final = []\n  array.forEach(function (item) {\n    if (item in seen) {\n      return\n    }\n    final.push(item)\n    seen[item] = 0\n  })\n  return final\n}\n\n/**\n * MongoDBAdapter class.\n *\n * @example\n * import {DS} from 'js-data'\n * import MongoDBAdapter from 'js-data-mongodb'\n * const store = new DS()\n * const adapter = new MongoDBAdapter({\n *   uri: 'mongodb://localhost:27017'\n * })\n * store.registerAdapter('mongodb', adapter, { 'default': true })\n *\n * @class MongoDBAdapter\n * @param {Object} [opts] Configuration opts.\n * @param {string} [opts.uri=''] MongoDB URI.\n */\nexport default function MongoDBAdapter (opts) {\n  const self = this\n  if (typeof opts === 'string') {\n    opts = { uri: opts }\n  }\n  opts.uri || (opts.uri = 'mongodb://localhost:27017')\n  self.defaults = new Defaults()\n  DSUtils.deepMixIn(self.defaults, opts)\n  fillIn(self, opts)\n\n  /**\n   * A Promise that resolves to a reference to the MongoDB client being used by\n   * this adapter.\n   *\n   * @name MongoDBAdapter#client\n   * @type {Object}\n   */\n  self.client = new DSUtils.Promise(function (resolve, reject) {\n    MongoClient.connect(opts.uri, opts.mongoDriverOpts, function (err, db) {\n      return err ? reject(err) : resolve(db)\n    })\n  })\n}\n\naddHiddenPropsToTarget(MongoDBAdapter.prototype, {\n  /**\n   * Return a Promise that resolves to a reference to the MongoDB client being\n   * used by this adapter.\n   *\n   * Useful when you need to do anything custom with the MongoDB client library.\n   *\n   * @name MongoDBAdapter#getClient\n   * @method\n   * @return {Object} MongoDB client.\n   */\n  getClient () {\n    return this.client\n  },\n\n  /**\n   * Map filtering params in a selection query to MongoDB a filtering object.\n   *\n   * Handles the following:\n   *\n   * - where\n   *   - and bunch of filtering operators\n   *\n   * @name MongoDBAdapter#getQuery\n   * @method\n   * @return {Object}\n   */\n  getQuery (Resource, query) {\n    query || (query = {})\n    query.where || (query.where = {})\n\n    DSUtils.forOwn(query, function (v, k) {\n      if (reserved.indexOf(k) === -1) {\n        if (DSUtils.isObject(v)) {\n          query.where[k] = v\n        } else {\n          query.where[k] = {\n            '==': v\n          }\n        }\n        delete query[k]\n      }\n    })\n\n    let mongoQuery = {}\n\n    if (Object.keys(query.where).length) {\n      DSUtils.forOwn(query.where, function (criteria, field) {\n        if (!DSUtils.isObject(criteria)) {\n          query.where[field] = {\n            '==': criteria\n          }\n        }\n        DSUtils.forOwn(criteria, function (v, op) {\n          if (op === '==' || op === '===') {\n            mongoQuery[field] = v\n          } else if (op === '!=' || op === '!==') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$ne = v\n          } else if (op === '>') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$gt = v\n          } else if (op === '>=') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$gte = v\n          } else if (op === '<') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$lt = v\n          } else if (op === '<=') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$lte = v\n          } else if (op === 'in') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$in = v\n          } else if (op === 'notIn') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$nin = v\n          } else if (op === '|==' || op === '|===') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orEqQuery = {}\n            orEqQuery[field] = v\n            mongoQuery.$or.push(orEqQuery)\n          } else if (op === '|!=' || op === '|!==') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orNeQuery = {}\n            orNeQuery[field] = {\n              '$ne': v\n            }\n            mongoQuery.$or.push(orNeQuery)\n          } else if (op === '|>') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orGtQuery = {}\n            orGtQuery[field] = {\n              '$gt': v\n            }\n            mongoQuery.$or.push(orGtQuery)\n          } else if (op === '|>=') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orGteQuery = {}\n            orGteQuery[field] = {\n              '$gte': v\n            }\n            mongoQuery.$or.push(orGteQuery)\n          } else if (op === '|<') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orLtQuery = {}\n            orLtQuery[field] = {\n              '$lt': v\n            }\n            mongoQuery.$or.push(orLtQuery)\n          } else if (op === '|<=') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orLteQuery = {}\n            orLteQuery[field] = {\n              '$lte': v\n            }\n            mongoQuery.$or.push(orLteQuery)\n          } else if (op === '|in') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orInQuery = {}\n            orInQuery[field] = {\n              '$in': v\n            }\n            mongoQuery.$or.push(orInQuery)\n          } else if (op === '|notIn') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orNinQuery = {}\n            orNinQuery[field] = {\n              '$nin': v\n            }\n            mongoQuery.$or.push(orNinQuery)\n          }\n        })\n      })\n    }\n\n    return mongoQuery\n  },\n\n  /**\n   * Map non-filtering params in a selection query to MongoDB query options.\n   *\n   * Handles the following:\n   *\n   * - limit\n   * - skip/offset\n   * - orderBy/sort\n   *\n   * @name MongoDBAdapter#getQueryOptions\n   * @method\n   * @return {Object}\n   */\n  getQueryOptions (Resource, query) {\n    query = query || {}\n    query.orderBy = query.orderBy || query.sort\n    query.skip = query.skip || query.offset\n\n    let queryOptions = {}\n\n    if (query.orderBy) {\n      if (DSUtils.isString(query.orderBy)) {\n        query.orderBy = [\n          [query.orderBy, 'asc']\n        ]\n      }\n      for (var i = 0; i < query.orderBy.length; i++) {\n        if (DSUtils.isString(query.orderBy[i])) {\n          query.orderBy[i] = [query.orderBy[i], 'asc']\n        }\n      }\n      queryOptions.sort = query.orderBy\n    }\n\n    if (query.skip) {\n      queryOptions.skip = +query.skip\n    }\n\n    if (query.limit) {\n      queryOptions.limit = +query.limit\n    }\n\n    return queryOptions\n  },\n\n  /**\n   * TODO\n   *\n   * @name MongoDBAdapter#translateId\n   * @method\n   * @return {*}\n   */\n  translateId (r, opts) {\n    opts || (opts = {})\n    if (typeof opts.translateId === 'boolean' ? opts.translateId : this.defaults.translateId) {\n      if (DSUtils.isArray(r)) {\n        r.forEach(function (_r) {\n          const __id = _r._id ? _r._id.toString() : _r._id\n          _r._id = typeof __id === 'string' ? __id : _r._id\n        })\n      } else if (DSUtils.isObject(r)) {\n        const __id = r._id ? r._id.toString() : r._id\n        r._id = typeof __id === 'string' ? __id : r._id\n      }\n    }\n    return r\n  },\n\n  /**\n   * TODO\n   *\n   * @name MongoDBAdapter#origify\n   * @method\n   * @return {Object}\n   */\n  origify (opts) {\n    opts = opts || {}\n    if (typeof opts.orig === 'function') {\n      return opts.orig()\n    }\n    return opts\n  },\n\n  /**\n   * TODO\n   *\n   * @name MongoDBAdapter#makeHasManyForeignKey\n   * @method\n   * @return {*}\n   */\n  toObjectID (Resource, id) {\n    if (id !== undefined && Resource.idAttribute === '_id' && typeof id === 'string' && ObjectID.isValid(id) && !(id instanceof ObjectID)) {\n      return new ObjectID(id)\n    }\n    return id\n  },\n\n  /**\n   * TODO\n   *\n   * If the foreignKeys in your database are saved as ObjectIDs, then override\n   * this method and change it to something like:\n   *\n   * ```\n   * return this.toObjectID(Resource, this.constructor.prototype.makeHasManyForeignKey.call(this, Resource, def, record))\n   * ```\n   *\n   * There may be other reasons why you may want to override this method, like\n   * when the id of the parent doesn't exactly match up to the key on the child.\n   *\n   * @name MongoDBAdapter#makeHasManyForeignKey\n   * @method\n   * @return {*}\n   */\n  makeHasManyForeignKey (Resource, def, record) {\n    return DSUtils.get(record, Resource.idAttribute)\n  },\n\n  /**\n   * TODO\n   *\n   * @name MongoDBAdapter#loadHasMany\n   * @method\n   * @return {Promise}\n   */\n  loadHasMany (Resource, def, records, __options) {\n    const self = this\n    let singular = false\n\n    if (DSUtils.isObject(records) && !DSUtils.isArray(records)) {\n      singular = true\n      records = [records]\n    }\n    const IDs = records.map(function (record) {\n      return self.makeHasManyForeignKey(Resource, def, record)\n    })\n    const query = {}\n    const criteria = query[def.foreignKey] = {}\n    if (singular) {\n      // more efficient query when we only have one record\n      criteria['=='] = IDs[0]\n    } else {\n      criteria['in'] = IDs.filter(function (id) {\n        return id\n      })\n    }\n    return self.findAll(Resource.getResource(def.relation), query, __options).then(function (relatedItems) {\n      records.forEach(function (record) {\n        let attached = []\n        // avoid unneccesary iteration when we only have one record\n        if (singular) {\n          attached = relatedItems\n        } else {\n          relatedItems.forEach(function (relatedItem) {\n            if (DSUtils.get(relatedItem, def.foreignKey) === record[Resource.idAttribute]) {\n              attached.push(relatedItem)\n            }\n          })\n        }\n        DSUtils.set(record, def.localField, attached)\n      })\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name MongoDBAdapter#loadHasOne\n   * @method\n   * @return {Promise}\n   */\n  loadHasOne (Resource, def, records, __options) {\n    if (DSUtils.isObject(records) && !DSUtils.isArray(records)) {\n      records = [records]\n    }\n    return this.loadHasMany(Resource, def, records, __options).then(function () {\n      records.forEach(function (record) {\n        const relatedData = DSUtils.get(record, def.localField)\n        if (DSUtils.isArray(relatedData) && relatedData.length) {\n          DSUtils.set(record, def.localField, relatedData[0])\n        }\n      })\n    })\n  },\n\n  /**\n   * TODO\n   *\n   * @name MongoDBAdapter#makeBelongsToForeignKey\n   * @method\n   * @return {*}\n   */\n  makeBelongsToForeignKey (Resource, def, record) {\n    return this.toObjectID(Resource.getResource(def.relation), DSUtils.get(record, def.localKey))\n  },\n\n  /**\n   * TODO\n   *\n   * @name MongoDBAdapter#loadBelongsTo\n   * @method\n   * @return {Promise}\n   */\n  loadBelongsTo (Resource, def, records, __options) {\n    const self = this\n    const relationDef = Resource.getResource(def.relation)\n\n    if (DSUtils.isObject(records) && !DSUtils.isArray(records)) {\n      const record = records\n      return self.find(relationDef, self.makeBelongsToForeignKey(Resource, def, record), __options).then(function (relatedItem) {\n        DSUtils.set(record, def.localField, relatedItem)\n      })\n    } else {\n      const keys = records.map(function (record) {\n        return self.makeBelongsToForeignKey(Resource, def, record)\n      }).filter(function (key) {\n        return key\n      })\n      return self.findAll(relationDef, {\n        where: {\n          [relationDef.idAttribute]: {\n            'in': keys\n          }\n        }\n      }, __options).then(function (relatedItems) {\n        records.forEach(function (record) {\n          relatedItems.forEach(function (relatedItem) {\n            if (relatedItem[relationDef.idAttribute] === record[def.localKey]) {\n              DSUtils.set(record, def.localField, relatedItem)\n            }\n          })\n        })\n      })\n    }\n  },\n\n  /**\n   * Retrieve the record with the given primary key.\n   *\n   * @name MongoDBAdapter#find\n   * @method\n   * @param {Object} Resource The Resource.\n   * @param {(string|number)} id Primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @param {string[]} [opts.with=[]] TODO\n   * @return {Promise}\n   */\n  find (Resource, id, options) {\n    const self = this\n    let instance\n    options = self.origify(options)\n    options.with || (options.with = [])\n    return self.getClient().then(function (client) {\n      return new DSUtils.Promise(function (resolve, reject) {\n        let mongoQuery = {}\n        mongoQuery[Resource.idAttribute] = self.toObjectID(Resource, id)\n        options.fields = options.fields || {}\n        client.collection(Resource.table || underscore(Resource.name)).findOne(mongoQuery, options, function (err, r) {\n          if (err) {\n            reject(err)\n          } else if (!r) {\n            reject(new Error('Not Found!'))\n          } else {\n            resolve(self.translateId(r, options))\n          }\n        })\n      })\n    }).then(function (_instance) {\n      instance = _instance\n      let tasks = []\n      const relationList = Resource.relationList || []\n\n      relationList.forEach(function (def) {\n        let relationName = def.relation\n        let relationDef = Resource.getResource(relationName)\n        let containedName = null\n        if (options.with.indexOf(relationName) !== -1) {\n          containedName = relationName\n        } else if (options.with.indexOf(def.localField) !== -1) {\n          containedName = def.localField\n        }\n        if (containedName) {\n          let __options = DSUtils.deepMixIn({}, options.orig ? options.orig() : options)\n          __options.with = options.with.slice()\n          __options = DSUtils._(relationDef, __options)\n          DSUtils.remove(__options.with, containedName)\n          __options.with.forEach(function (relation, i) {\n            if (relation && relation.indexOf(containedName) === 0 && relation.length >= containedName.length && relation[containedName.length] === '.') {\n              __options.with[i] = relation.substr(containedName.length + 1)\n            } else {\n              __options.with[i] = ''\n            }\n          })\n\n          let task\n\n          if (def.foreignKey && (def.type === 'hasOne' || def.type === 'hasMany')) {\n            if (def.type === 'hasOne') {\n              task = self.loadHasOne(Resource, def, instance, __options)\n            } else {\n              task = self.loadHasMany(Resource, def, instance, __options)\n            }\n          } else if (def.type === 'hasMany' && def.localKeys) {\n            let localKeys = []\n            let itemKeys = instance[def.localKeys] || []\n            itemKeys = DSUtils.isArray(itemKeys) ? itemKeys : DSUtils.keys(itemKeys)\n            localKeys = localKeys.concat(itemKeys || [])\n            task = self.findAll(Resource.getResource(relationName), {\n              where: {\n                [relationDef.idAttribute]: {\n                  'in': unique(localKeys).filter((x) => x).map((x) => self.toObjectID(relationDef, x))\n                }\n              }\n            }, __options).then(function (relatedItems) {\n              DSUtils.set(instance, def.localField, relatedItems)\n              return relatedItems\n            })\n          } else if (def.type === 'belongsTo' || (def.type === 'hasOne' && def.localKey)) {\n            task = self.loadBelongsTo(Resource, def, instance, __options)\n          }\n\n          if (task) {\n            tasks.push(task)\n          }\n        }\n      })\n\n      return DSUtils.Promise.all(tasks)\n    }).then(function () {\n      return instance\n    })\n  },\n\n  /**\n   * Retrieve the records that match the selection query.\n   *\n   * @name MongoDBAdapter#findAll\n   * @method\n   * @param {Object} Resource The Resource.\n   * @param {Object} query Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @param {string[]} [opts.with=[]] TODO\n   * @return {Promise}\n   */\n  findAll (Resource, query, options) {\n    const self = this\n    let items = null\n    options = self.origify(options ? DSUtils.copy(options) : {})\n    options.with = options.with || []\n    DSUtils.deepMixIn(options, self.getQueryOptions(Resource, query))\n    const mongoQuery = self.getQuery(Resource, query)\n    return self.getClient().then(function (client) {\n      return new DSUtils.Promise(function (resolve, reject) {\n        options.fields = options.fields || {}\n        client.collection(Resource.table || underscore(Resource.name)).find(mongoQuery, options).toArray((err, r) => {\n          if (err) {\n            reject(err)\n          } else {\n            resolve(self.translateId(r, options))\n          }\n        })\n      })\n    }).then(function (_items) {\n      items = _items\n      let tasks = []\n      const relationList = Resource.relationList || []\n      relationList.forEach(function (def) {\n        let relationName = def.relation\n        let relationDef = Resource.getResource(relationName)\n        let containedName = null\n        if (options.with.indexOf(relationName) !== -1) {\n          containedName = relationName\n        } else if (options.with.indexOf(def.localField) !== -1) {\n          containedName = def.localField\n        }\n        if (containedName) {\n          let __options = DSUtils.deepMixIn({}, options.orig ? options.orig() : options)\n          __options.with = options.with.slice()\n          __options = DSUtils._(relationDef, __options)\n          DSUtils.remove(__options.with, containedName)\n          __options.with.forEach(function (relation, i) {\n            if (relation && relation.indexOf(containedName) === 0 && relation.length >= containedName.length && relation[containedName.length] === '.') {\n              __options.with[i] = relation.substr(containedName.length + 1)\n            } else {\n              __options.with[i] = ''\n            }\n          })\n\n          let task\n\n          if (def.foreignKey && (def.type === 'hasOne' || def.type === 'hasMany')) {\n            if (def.type === 'hasMany') {\n              task = self.loadHasMany(Resource, def, items, __options)\n            } else {\n              task = self.loadHasOne(Resource, def, items, __options)\n            }\n          } else if (def.type === 'hasMany' && def.localKeys) {\n            let localKeys = []\n            items.forEach(function (item) {\n              let itemKeys = item[def.localKeys] || []\n              itemKeys = DSUtils.isArray(itemKeys) ? itemKeys : Object.keys(itemKeys)\n              localKeys = localKeys.concat(itemKeys || [])\n            })\n            task = self.findAll(Resource.getResource(relationName), {\n              where: {\n                [relationDef.idAttribute]: {\n                  'in': unique(localKeys).filter((x) => x).map((x) => self.toObjectID(relationDef, x))\n                }\n              }\n            }, __options).then(function (relatedItems) {\n              items.forEach(function (item) {\n                let attached = []\n                let itemKeys = item[def.localKeys] || []\n                itemKeys = DSUtils.isArray(itemKeys) ? itemKeys : DSUtils.keys(itemKeys)\n                relatedItems.forEach(function (relatedItem) {\n                  if (itemKeys && itemKeys.indexOf(relatedItem[relationDef.idAttribute]) !== -1) {\n                    attached.push(relatedItem)\n                  }\n                })\n                DSUtils.set(item, def.localField, attached)\n              })\n              return relatedItems\n            })\n          } else if (def.type === 'belongsTo' || (def.type === 'hasOne' && def.localKey)) {\n            task = self.loadBelongsTo(Resource, def, items, __options)\n          }\n\n          if (task) {\n            tasks.push(task)\n          }\n        }\n      })\n      return DSUtils.Promise.all(tasks)\n    }).then(function () {\n      return items\n    })\n  },\n\n  /**\n   * Create a new record.\n   *\n   * @name MongoDBAdapter#create\n   * @method\n   * @param {Object} Resource The Resource.\n   * @param {Object} props The record to be created.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  create (Resource, props, opts) {\n    const self = this\n    props = DSUtils.removeCircular(DSUtils.omit(props, Resource.relationFields || []))\n    opts = self.origify(opts)\n\n    return self.getClient().then(function (client) {\n      return new DSUtils.Promise(function (resolve, reject) {\n        const collection = client.collection(Resource.table || underscore(Resource.name))\n        const method = collection.insertOne ? DSUtils.isArray(props) ? 'insertMany' : 'insertOne' : 'insert'\n        collection[method](props, opts, function (err, r) {\n          if (err) {\n            reject(err)\n          } else {\n            r = r.ops ? r.ops : r\n            self.translateId(r, opts)\n            resolve(DSUtils.isArray(props) ? r : r[0])\n          }\n        })\n      })\n    })\n  },\n\n  /**\n   * Destroy the record with the given primary key.\n   *\n   * @name MongoDBAdapter#destroy\n   * @method\n   * @param {Object} Resource The Resource.\n   * @param {(string|number)} id Primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  destroy (Resource, id, opts) {\n    const self = this\n    opts = self.origify(opts)\n\n    return self.getClient().then(function (client) {\n      return new DSUtils.Promise(function (resolve, reject) {\n        const mongoQuery = {}\n        mongoQuery[Resource.idAttribute] = self.toObjectID(Resource, id)\n        const collection = client.collection(Resource.table || underscore(Resource.name))\n        collection[collection.deleteOne ? 'deleteOne' : 'remove'](mongoQuery, opts, function (err) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve()\n          }\n        })\n      })\n    })\n  },\n\n  /**\n   * Destroy the records that match the selection query.\n   *\n   * @name MongoDBAdapter#destroyAll\n   * @method\n   * @param {Object} Resource the Resource.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  destroyAll (Resource, query, opts) {\n    const self = this\n    opts = self.origify(opts ? DSUtils.copy(opts) : {})\n\n    return self.getClient().then(function (client) {\n      DSUtils.deepMixIn(opts, self.getQueryOptions(Resource, query))\n      const mongoQuery = self.getQuery(Resource, query)\n      return new DSUtils.Promise(function (resolve, reject) {\n        const collection = client.collection(Resource.table || underscore(Resource.name))\n        collection[collection.deleteMany ? 'deleteMany' : 'remove'](mongoQuery, opts, function (err) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve()\n          }\n        })\n      })\n    })\n  },\n\n  /**\n   * Apply the given update to the record with the specified primary key.\n   *\n   * @name MongoDBAdapter#update\n   * @method\n   * @param {Object} Resource The Resource.\n   * @param {(string|number)} id The primary key of the record to be updated.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  update (Resource, id, props, opts) {\n    const self = this\n    props = DSUtils.removeCircular(DSUtils.omit(props, Resource.relationFields || []))\n    opts = self.origify(opts)\n\n    return self.find(Resource, id, opts).then(function () {\n      return self.getClient()\n    }).then(function (client) {\n      return new DSUtils.Promise(function (resolve, reject) {\n        const mongoQuery = {}\n        mongoQuery[Resource.idAttribute] = self.toObjectID(Resource, id)\n        const collection = client.collection(Resource.table || underscore(Resource.name))\n        collection[collection.updateOne ? 'updateOne' : 'update'](mongoQuery, { $set: props }, opts, function (err) {\n          if (err) {\n            reject(err)\n          } else {\n            resolve()\n          }\n        })\n      })\n    }).then(function () {\n      return self.find(Resource, id, opts)\n    })\n  },\n\n  /**\n   * Apply the given update to all records that match the selection query.\n   *\n   * @name MongoDBAdapter#updateAll\n   * @method\n   * @param {Object} Resource The Resource.\n   * @param {Object} props The update to apply to the selected records.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  updateAll (Resource, props, query, opts) {\n    const self = this\n    let ids = []\n    props = DSUtils.removeCircular(DSUtils.omit(props, Resource.relationFields || []))\n    opts = self.origify(opts ? DSUtils.copy(opts) : {})\n    const mongoOptions = DSUtils.copy(opts)\n    mongoOptions.multi = true\n\n    return self.getClient().then(function (client) {\n      const queryOptions = self.getQueryOptions(Resource, query)\n      queryOptions.$set = props\n      const mongoQuery = self.getQuery(Resource, query)\n\n      return self.findAll(Resource, query, opts).then(function (items) {\n        ids = items.map(function (item) {\n          return self.toObjectID(Resource, item[Resource.idAttribute])\n        })\n\n        return new DSUtils.Promise(function (resolve, reject) {\n          const collection = client.collection(Resource.table || underscore(Resource.name))\n          collection[collection.updateMany ? 'updateMany' : 'update'](mongoQuery, queryOptions, mongoOptions, function (err) {\n            if (err) {\n              reject(err)\n            } else {\n              resolve()\n            }\n          })\n        })\n      }).then(function () {\n        const query = {}\n        query[Resource.idAttribute] = {\n          'in': ids\n        }\n        return self.findAll(Resource, query, opts)\n      })\n    })\n  }\n})\n"],"names":["mongodb","require","MongoClient","bson","ObjectID","JSData","underscore","DSUtils","reserved","Defaults","prototype","translateId","mongoDriverOpts","ignoreUndefined","addHiddenPropsToTarget","target","props","forOwn","value","key","defineProperties","fillIn","dest","src","hasOwnProperty","undefined","unique","array","seen","final","forEach","item","push","MongoDBAdapter","opts","self","uri","defaults","deepMixIn","client","Promise","resolve","reject","connect","err","db","Resource","query","where","v","k","indexOf","isObject","mongoQuery","Object","keys","length","criteria","field","op","$ne","$gt","$gte","$lt","$lte","$in","$nin","$or","orEqQuery","orNeQuery","orGtQuery","orGteQuery","orLtQuery","orLteQuery","orInQuery","orNinQuery","orderBy","sort","skip","offset","queryOptions","isString","i","limit","r","isArray","_r","__id","_id","toString","orig","id","idAttribute","isValid","def","record","get","records","__options","singular","IDs","map","makeHasManyForeignKey","foreignKey","filter","findAll","getResource","relation","then","relatedItems","attached","relatedItem","set","localField","loadHasMany","relatedData","toObjectID","localKey","relationDef","find","makeBelongsToForeignKey","options","instance","origify","with","getClient","fields","collection","table","name","findOne","Error","_instance","tasks","relationList","relationName","containedName","slice","_","remove","substr","task","type","loadHasOne","localKeys","itemKeys","concat","x","loadBelongsTo","all","items","copy","getQueryOptions","getQuery","toArray","_items","removeCircular","omit","relationFields","method","insertOne","ops","deleteOne","deleteMany","updateOne","$set","ids","mongoOptions","multi","updateMany"],"mappings":"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"}