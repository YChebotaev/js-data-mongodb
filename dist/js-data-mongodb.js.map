{"version":3,"file":"js-data-mongodb.js","sources":["../src/index.js"],"sourcesContent":["import {MongoClient} from 'mongodb'\nimport {ObjectID} from 'bson'\nimport {utils} from 'js-data'\nimport {\n  Adapter,\n  reserved\n} from 'js-data-adapter'\nimport underscore from 'mout/string/underscore'\n\nconst DEFAULTS = {\n  /**\n   * Convert ObjectIDs to strings when pulling records out of the database.\n   *\n   * @name MongoDBAdapter#translateId\n   * @type {boolean}\n   * @default true\n   */\n  translateId: true,\n\n  /**\n   * MongoDB URI.\n   *\n   * @name MongoDBAdapter#uri\n   * @type {string}\n   * @default mongodb://localhost:27017\n   */\n  uri: 'mongodb://localhost:27017'\n}\n\nconst COUNT_OPTS_DEFAULTS = {}\nconst FIND_OPTS_DEFAULTS = {}\nconst FIND_ONE_OPTS_DEFAULTS = {}\nconst INSERT_OPTS_DEFAULTS = {}\nconst INSERT_MANY_OPTS_DEFAULTS = {}\nconst UPDATE_OPTS_DEFAULTS = {}\nconst REMOVE_OPTS_DEFAULTS = {}\n\n/**\n * MongoDBAdapter class.\n *\n * @example\n * // Use Container instead of DataStore on the server\n * import {Container} from 'js-data'\n * import MongoDBAdapter from 'js-data-mongodb'\n *\n * // Create a store to hold your Mappers\n * const store = new Container({\n *   mapperDefaults: {\n *     // MongoDB uses \"_id\" as the primary key\n *     idAttribute: '_id'\n *   }\n * })\n *\n * // Create an instance of MongoDBAdapter with default settings\n * const adapter = new MongoDBAdapter()\n *\n * // Mappers in \"store\" will use the MongoDB adapter by default\n * store.registerAdapter('mongodb', adapter, { default: true })\n *\n * // Create a Mapper that maps to a \"user\" collection\n * store.defineMapper('user')\n *\n * @class MongoDBAdapter\n * @extends Adapter\n * @param {Object} [opts] Configuration options.\n * @param {boolean} [opts.debug=false] See {@link Adapter#debug}.\n * @param {Object} [opts.countOpts] See {@link MongoDBAdapter#countOpts}.\n * @param {Object} [opts.findOpts] See {@link MongoDBAdapter#findOpts}.\n * @param {Object} [opts.findOneOpts] See {@link MongoDBAdapter#findOneOpts}.\n * @param {Object} [opts.insertOpts] See {@link MongoDBAdapter#insertOpts}.\n * @param {Object} [opts.insertManyOpts] See {@link MongoDBAdapter#insertManyOpts}.\n * @param {boolean} [opts.raw=false] See {@link Adapter#raw}.\n * @param {Object} [opts.removeOpts] See {@link MongoDBAdapter#removeOpts}.\n * @param {boolean} [opts.translateId=true] See {@link MongoDBAdapter#translateId}.\n * @param {Object} [opts.updateOpts] See {@link MongoDBAdapter#updateOpts}.\n * @param {string} [opts.uri=\"mongodb://localhost:27017\"] See {@link MongoDBAdapter#uri}.\n */\nexport function MongoDBAdapter (opts) {\n  const self = this\n  utils.classCallCheck(self, MongoDBAdapter)\n  opts || (opts = {})\n  if (utils.isString(opts)) {\n    opts = { uri: opts }\n  }\n  utils.fillIn(opts, DEFAULTS)\n  Adapter.call(self, opts)\n\n  /**\n   * Default options to pass to collection#count.\n   *\n   * @name MongoDBAdapter#countOpts\n   * @type {Object}\n   * @default {}\n   */\n  self.countOpts || (self.countOpts = {})\n  utils.fillIn(self.countOpts, COUNT_OPTS_DEFAULTS)\n\n  /**\n   * Default options to pass to collection#find.\n   *\n   * @name MongoDBAdapter#findOpts\n   * @type {Object}\n   * @default {}\n   */\n  self.findOpts || (self.findOpts = {})\n  utils.fillIn(self.findOpts, FIND_OPTS_DEFAULTS)\n\n  /**\n   * Default options to pass to collection#findOne.\n   *\n   * @name MongoDBAdapter#findOneOpts\n   * @type {Object}\n   * @default {}\n   */\n  self.findOneOpts || (self.findOneOpts = {})\n  utils.fillIn(self.findOneOpts, FIND_ONE_OPTS_DEFAULTS)\n\n  /**\n   * Default options to pass to collection#insert.\n   *\n   * @name MongoDBAdapter#insertOpts\n   * @type {Object}\n   * @default {}\n   */\n  self.insertOpts || (self.insertOpts = {})\n  utils.fillIn(self.insertOpts, INSERT_OPTS_DEFAULTS)\n\n  /**\n   * Default options to pass to collection#insertMany.\n   *\n   * @name MongoDBAdapter#insertManyOpts\n   * @type {Object}\n   * @default {}\n   */\n  self.insertManyOpts || (self.insertManyOpts = {})\n  utils.fillIn(self.insertManyOpts, INSERT_MANY_OPTS_DEFAULTS)\n\n  /**\n   * Default options to pass to collection#update.\n   *\n   * @name MongoDBAdapter#updateOpts\n   * @type {Object}\n   * @default {}\n   */\n  self.updateOpts || (self.updateOpts = {})\n  utils.fillIn(self.updateOpts, UPDATE_OPTS_DEFAULTS)\n\n  /**\n   * Default options to pass to collection#update.\n   *\n   * @name MongoDBAdapter#removeOpts\n   * @type {Object}\n   * @default {}\n   */\n  self.removeOpts || (self.removeOpts = {})\n  utils.fillIn(self.removeOpts, REMOVE_OPTS_DEFAULTS)\n\n  /**\n   * A Promise that resolves to a reference to the MongoDB client being used by\n   * this adapter.\n   *\n   * @name MongoDBAdapter#client\n   * @type {Object}\n   */\n  self.client = new Promise(function (resolve, reject) {\n    MongoClient.connect(opts.uri, function (err, db) {\n      return err ? reject(err) : resolve(db)\n    })\n  })\n}\n\n// Setup prototype inheritance from Adapter\nMongoDBAdapter.prototype = Object.create(Adapter.prototype, {\n  constructor: {\n    value: MongoDBAdapter,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n})\n\nObject.defineProperty(MongoDBAdapter, '__super__', {\n  configurable: true,\n  value: Adapter\n})\n\n/**\n * Alternative to ES6 class syntax for extending `MongoDBAdapter`.\n *\n * @example <caption>Using the ES2015 class syntax.</caption>\n * class MyMongoDBAdapter extends MongoDBAdapter {...}\n * const adapter = new MyMongoDBAdapter()\n *\n * @example <caption>Using {@link MongoDBAdapter.extend}.</caption>\n * var instanceProps = {...}\n * var classProps = {...}\n *\n * var MyMongoDBAdapter = MongoDBAdapter.extend(instanceProps, classProps)\n * var adapter = new MyMongoDBAdapter()\n *\n * @method MongoDBAdapter.extend\n * @static\n * @param {Object} [instanceProps] Properties that will be added to the\n * prototype of the subclass.\n * @param {Object} [classProps] Properties that will be added as static\n * properties to the subclass itself.\n * @return {Object} Subclass of `MongoDBAdapter`.\n */\nMongoDBAdapter.extend = utils.extend\n\nutils.addHiddenPropsToTarget(MongoDBAdapter.prototype, {\n  /**\n   * Translate ObjectIDs to strings.\n   *\n   * @method MongoDBAdapter#_translateId\n   * @return {*}\n   */\n  _translateId (r, opts) {\n    opts || (opts = {})\n    if (this.getOpt('translateId', opts)) {\n      if (utils.isArray(r)) {\n        r.forEach(function (_r) {\n          const __id = _r._id ? _r._id.toString() : _r._id\n          _r._id = typeof __id === 'string' ? __id : _r._id\n        })\n      } else if (utils.isObject(r)) {\n        const __id = r._id ? r._id.toString() : r._id\n        r._id = typeof __id === 'string' ? __id : r._id\n      }\n    }\n    return r\n  },\n\n  /**\n   * Retrieve the number of records that match the selection query.\n   *\n   * @method MongoDBAdapter#count\n   * @param {Object} mapper The mapper.\n   * @param {Object} query Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.countOpts] Options to pass to collection#count.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n\n  /**\n   * Retrieve the records that match the selection query. Internal method used\n   * by Adapter#count.\n   *\n   * @method MongoDBAdapter#_count\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {Object} query Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _count (mapper, query, opts) {\n    const self = this\n    opts || (opts = {})\n\n    const countOpts = self.getOpt('countOpts', opts)\n    utils.fillIn(countOpts, self.getQueryOptions(mapper, query))\n    const mongoQuery = self.getQuery(mapper, query)\n\n    return self.getClient().then(function (client) {\n      return new Promise(function (resolve, reject) {\n        client.collection(mapper.table || underscore(mapper.name)).count(mongoQuery, countOpts, function (err, count) {\n          return err ? reject(err) : resolve([count, {}])\n        })\n      })\n    })\n  },\n\n  /**\n   * Create a new record.\n   *\n   * @method MongoDBAdapter#create\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The record to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.insertOpts] Options to pass to collection#insert.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * @return {Promise}\n   */\n\n  /**\n   * Create a new record. Internal method used by Adapter#create.\n   *\n   * @method MongoDBAdapter#_create\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The record to be created.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _create (mapper, props, opts) {\n    const self = this\n    props || (props = {})\n    opts || (opts = {})\n    props = utils.plainCopy(props)\n\n    const insertOpts = self.getOpt('insertOpts', opts)\n\n    return self.getClient().then(function (client) {\n      return new Promise(function (resolve, reject) {\n        const collection = client.collection(mapper.table || underscore(mapper.name))\n        const method = collection.insertOne ? 'insertOne' : 'insert'\n        collection[method](props, insertOpts, function (err, cursor) {\n          return err ? reject(err) : resolve(cursor)\n        })\n      })\n    }).then(function (cursor) {\n      let record\n      let r = cursor.ops ? cursor.ops : cursor\n      self._translateId(r, opts)\n      record = utils.isArray(r) ? r[0] : r\n      cursor.connection = undefined\n      return [record, cursor]\n    })\n  },\n\n  /**\n   * Create multiple records in a single batch.\n   *\n   * @method MongoDBAdapter#createMany\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The records to be created.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.insertManyOpts] Options to pass to\n   * collection#insertMany.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @return {Promise}\n   */\n\n  /**\n   * Create multiple records in a single batch. Internal method used by\n   * Adapter#createMany.\n   *\n   * @method MongoDBAdapter#_createMany\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The records to be created.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _createMany (mapper, props, opts) {\n    const self = this\n    props || (props = {})\n    opts || (opts = {})\n    props = utils.plainCopy(props)\n\n    const insertManyOpts = self.getOpt('insertManyOpts', opts)\n\n    return self.getClient().then(function (client) {\n      return new Promise(function (resolve, reject) {\n        const collection = client.collection(mapper.table || underscore(mapper.name))\n        collection.insertMany(props, insertManyOpts, function (err, cursor) {\n          return err ? reject(err) : resolve(cursor)\n        })\n      })\n    }).then(function (cursor) {\n      let records = []\n      let r = cursor.ops ? cursor.ops : cursor\n      self._translateId(r, opts)\n      records = r\n      cursor.connection = undefined\n      return [records, cursor]\n    })\n  },\n\n  /**\n   * Destroy the record with the given primary key.\n   *\n   * @method MongoDBAdapter#destroy\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {Object} [opts.removeOpts] Options to pass to collection#remove.\n   * @return {Promise}\n   */\n\n  /**\n   * Destroy the record with the given primary key. Internal method used by\n   * Adapter#destroy.\n   *\n   * @method MongoDBAdapter#_destroy\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to destroy.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _destroy (mapper, id, opts) {\n    const self = this\n    opts || (opts = {})\n    const removeOpts = self.getOpt('removeOpts', opts)\n\n    return self.getClient().then(function (client) {\n      return new Promise(function (resolve, reject) {\n        const mongoQuery = {}\n        mongoQuery[mapper.idAttribute] = self.toObjectID(mapper, id)\n        const collection = client.collection(mapper.table || underscore(mapper.name))\n        collection[collection.deleteOne ? 'deleteOne' : 'remove'](mongoQuery, removeOpts, function (err, cursor) {\n          return err ? reject(err) : resolve(cursor)\n        })\n      })\n    }).then(function (cursor) {\n      return [undefined, cursor]\n    })\n  },\n\n  /**\n   * Destroy the records that match the selection query.\n   *\n   * @method MongoDBAdapter#destroyAll\n   * @param {Object} mapper the mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [query.where] Filtering criteria.\n   * @param {string|Array} [query.orderBy] Sorting criteria.\n   * @param {string|Array} [query.sort] Same as `query.sort`.\n   * @param {number} [query.limit] Limit results.\n   * @param {number} [query.skip] Offset results.\n   * @param {number} [query.offset] Same as `query.skip`.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {Object} [opts.removeOpts] Options to pass to collection#remove.\n   * @return {Promise}\n   */\n\n  /**\n   * Destroy the records that match the selection query. Internal method used by\n   * Adapter#destroyAll.\n   *\n   * @method MongoDBAdapter#_destroyAll\n   * @private\n   * @param {Object} mapper the mapper.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _destroyAll (mapper, query, opts) {\n    const self = this\n    query || (query = {})\n    opts || (opts = {})\n    const removeOpts = self.getOpt('removeOpts', opts)\n    utils.fillIn(removeOpts, self.getQueryOptions(mapper, query))\n\n    return self.getClient().then(function (client) {\n      const mongoQuery = self.getQuery(mapper, query)\n      return new Promise(function (resolve, reject) {\n        const collection = client.collection(mapper.table || underscore(mapper.name))\n        collection[collection.deleteMany ? 'deleteMany' : 'remove'](mongoQuery, removeOpts, function (err, cursor) {\n          return err ? reject(err) : resolve(cursor)\n        })\n      })\n    }).then(function (cursor) {\n      cursor.connection = undefined\n      return [undefined, cursor]\n    })\n  },\n\n  /**\n   * Retrieve the record with the given primary key.\n   *\n   * @method MongoDBAdapter#find\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.findOneOpts] Options to pass to collection#findOne.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n\n  /**\n   * Retrieve the record with the given primary key. Internal method used by\n   * Adapter#find.\n   *\n   * @method MongoDBAdapter#_find\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id Primary key of the record to retrieve.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _find (mapper, id, opts) {\n    const self = this\n    opts || (opts = {})\n    opts.with || (opts.with = [])\n\n    const findOneOpts = self.getOpt('findOneOpts', opts)\n    findOneOpts.fields || (findOneOpts.fields = {})\n\n    return self.getClient().then(function (client) {\n      return new Promise(function (resolve, reject) {\n        let mongoQuery = {}\n        mongoQuery[mapper.idAttribute] = self.toObjectID(mapper, id)\n        client.collection(mapper.table || underscore(mapper.name)).findOne(mongoQuery, findOneOpts, function (err, record) {\n          return err ? reject(err) : resolve(record)\n        })\n      })\n    }).then(function (record) {\n      if (record) {\n        self._translateId(record, opts)\n      }\n      return [record, {}]\n    })\n  },\n\n  /**\n   * Retrieve the records that match the selection query.\n   *\n   * @method MongoDBAdapter#findAll\n   * @param {Object} mapper The mapper.\n   * @param {Object} query Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @param {Object} [opts.findOpts] Options to pass to collection#find.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {string[]} [opts.with=[]] Relations to eager load.\n   * @return {Promise}\n   */\n\n  /**\n   * Retrieve the records that match the selection query. Internal method used\n   * by Adapter#findAll.\n   *\n   * @method MongoDBAdapter#_findAll\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {Object} query Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _findAll (mapper, query, opts) {\n    const self = this\n    opts || (opts = {})\n\n    const findOpts = self.getOpt('findOpts', opts)\n    utils.fillIn(findOpts, self.getQueryOptions(mapper, query))\n    findOpts.fields || (findOpts.fields = {})\n    const mongoQuery = self.getQuery(mapper, query)\n\n    return self.getClient().then(function (client) {\n      return new Promise(function (resolve, reject) {\n        client.collection(mapper.table || underscore(mapper.name)).find(mongoQuery, findOpts).toArray(function (err, records) {\n          return err ? reject(err) : resolve(records)\n        })\n      })\n    }).then(function (records) {\n      self._translateId(records, opts)\n      return [records, {}]\n    })\n  },\n\n  /**\n   * Apply the given update to the record with the specified primary key.\n   *\n   * @method MongoDBAdapter#update\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id The primary key of the record to be updated.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {Object} [opts.updateOpts] Options to pass to collection#update.\n   * @return {Promise}\n   */\n\n  /**\n   * Apply the given update to the record with the specified primary key.\n   * Internal method used by Adapter#update.\n   *\n   * @method MongoDBAdapter#_update\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {(string|number)} id The primary key of the record to be updated.\n   * @param {Object} props The update to apply to the record.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _update (mapper, id, props, opts) {\n    const self = this\n    props || (props = {})\n    opts || (opts = {})\n    const updateOpts = self.getOpt('updateOpts', opts)\n\n    return self.find(mapper, id, { raw: false }).then(function (record) {\n      if (!record) {\n        throw new Error('Not Found')\n      }\n      return self.getClient().then(function (client) {\n        return new Promise(function (resolve, reject) {\n          const mongoQuery = {}\n          mongoQuery[mapper.idAttribute] = self.toObjectID(mapper, id)\n          const collection = client.collection(mapper.table || underscore(mapper.name))\n          collection[collection.updateOne ? 'updateOne' : 'update'](mongoQuery, { $set: props }, updateOpts, function (err, cursor) {\n            return err ? reject(err) : resolve(cursor)\n          })\n        })\n      })\n    }).then(function (cursor) {\n      return self.find(mapper, id, { raw: false }).then(function (record) {\n        cursor.connection = undefined\n        return [record, cursor]\n      })\n    })\n  },\n\n  /**\n   * Apply the given update to all records that match the selection query.\n   *\n   * @method MongoDBAdapter#updateAll\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The update to apply to the selected records.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @param {boolean} [opts.raw=false] Whether to return a more detailed\n   * response object.\n   * @param {Object} [opts.updateOpts] Options to pass to collection#update.\n   * @return {Promise}\n   */\n\n  /**\n   * Apply the given update to all records that match the selection query.\n   * Internal method used by Adapter#updateAll.\n   *\n   * @method MongoDBAdapter#_updateAll\n   * @private\n   * @param {Object} mapper The mapper.\n   * @param {Object} props The update to apply to the selected records.\n   * @param {Object} [query] Selection query.\n   * @param {Object} [opts] Configuration options.\n   * @return {Promise}\n   */\n  _updateAll (mapper, props, query, opts) {\n    const self = this\n    props || (props = {})\n    query || (query = {})\n    opts || (opts = {})\n    let ids\n    const updateOpts = self.getOpt('updateOpts', opts)\n    updateOpts.multi = true\n\n    return Promise.all([\n      self.findAll(mapper, query, { raw: false }),\n      self.getClient()\n    ]).then(function (results) {\n      let [records, client] = results\n      const queryOptions = self.getQueryOptions(mapper, query)\n      const mongoQuery = self.getQuery(mapper, query)\n\n      queryOptions.$set = props\n      ids = records.map(function (record) {\n        return self.toObjectID(mapper, record[mapper.idAttribute])\n      })\n\n      return new Promise(function (resolve, reject) {\n        const collection = client.collection(mapper.table || underscore(mapper.name))\n        collection[collection.updateMany ? 'updateMany' : 'update'](mongoQuery, queryOptions, updateOpts, function (err, cursor) {\n          return err ? reject(err) : resolve(cursor)\n        })\n      })\n    }).then(function (cursor) {\n      const query = {}\n      query[mapper.idAttribute] = {\n        'in': ids\n      }\n      return self.findAll(mapper, query, { raw: false }).then(function (records) {\n        cursor.connection = undefined\n        return [records, cursor]\n      })\n    })\n  },\n\n  /**\n   * Return a Promise that resolves to a reference to the MongoDB client being\n   * used by this adapter.\n   *\n   * Useful when you need to do anything custom with the MongoDB client library.\n   *\n   * @method MongoDBAdapter#getClient\n   * @return {Object} MongoDB client.\n   */\n  getClient () {\n    return this.client\n  },\n\n  /**\n   * Map filtering params in a selection query to MongoDB a filtering object.\n   *\n   * Handles the following:\n   *\n   * - where\n   *   - and bunch of filtering operators\n   *\n   * @method MongoDBAdapter#getQuery\n   * @return {Object}\n   */\n  getQuery (mapper, query) {\n    query = utils.plainCopy(query || {})\n    query.where || (query.where = {})\n\n    utils.forOwn(query, function (config, keyword) {\n      if (reserved.indexOf(keyword) === -1) {\n        if (utils.isObject(config)) {\n          query.where[keyword] = config\n        } else {\n          query.where[keyword] = {\n            '==': config\n          }\n        }\n        delete query[keyword]\n      }\n    })\n\n    let mongoQuery = {}\n\n    if (Object.keys(query.where).length !== 0) {\n      utils.forOwn(query.where, function (criteria, field) {\n        if (!utils.isObject(criteria)) {\n          query.where[field] = {\n            '==': criteria\n          }\n        }\n        utils.forOwn(criteria, function (v, op) {\n          if (op === '==' || op === '===' || op === 'contains') {\n            mongoQuery[field] = v\n          } else if (op === '!=' || op === '!==' || op === 'notContains') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$ne = v\n          } else if (op === '>') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$gt = v\n          } else if (op === '>=') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$gte = v\n          } else if (op === '<') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$lt = v\n          } else if (op === '<=') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$lte = v\n          } else if (op === 'in') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$in = v\n          } else if (op === 'notIn') {\n            mongoQuery[field] = mongoQuery[field] || {}\n            mongoQuery[field].$nin = v\n          } else if (op === '|==' || op === '|===' || op === '|contains') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orEqQuery = {}\n            orEqQuery[field] = v\n            mongoQuery.$or.push(orEqQuery)\n          } else if (op === '|!=' || op === '|!==' || op === '|notContains') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orNeQuery = {}\n            orNeQuery[field] = {\n              '$ne': v\n            }\n            mongoQuery.$or.push(orNeQuery)\n          } else if (op === '|>') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orGtQuery = {}\n            orGtQuery[field] = {\n              '$gt': v\n            }\n            mongoQuery.$or.push(orGtQuery)\n          } else if (op === '|>=') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orGteQuery = {}\n            orGteQuery[field] = {\n              '$gte': v\n            }\n            mongoQuery.$or.push(orGteQuery)\n          } else if (op === '|<') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orLtQuery = {}\n            orLtQuery[field] = {\n              '$lt': v\n            }\n            mongoQuery.$or.push(orLtQuery)\n          } else if (op === '|<=') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orLteQuery = {}\n            orLteQuery[field] = {\n              '$lte': v\n            }\n            mongoQuery.$or.push(orLteQuery)\n          } else if (op === '|in') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orInQuery = {}\n            orInQuery[field] = {\n              '$in': v\n            }\n            mongoQuery.$or.push(orInQuery)\n          } else if (op === '|notIn') {\n            mongoQuery.$or = mongoQuery.$or || []\n            let orNinQuery = {}\n            orNinQuery[field] = {\n              '$nin': v\n            }\n            mongoQuery.$or.push(orNinQuery)\n          }\n        })\n      })\n    }\n\n    return mongoQuery\n  },\n\n  /**\n   * Map non-filtering params in a selection query to MongoDB query options.\n   *\n   * Handles the following:\n   *\n   * - limit\n   * - skip/offset\n   * - orderBy/sort\n   *\n   * @method MongoDBAdapter#getQueryOptions\n   * @return {Object}\n   */\n  getQueryOptions (mapper, query) {\n    query = utils.plainCopy(query || {})\n    query.orderBy = query.orderBy || query.sort\n    query.skip = query.skip || query.offset\n\n    let queryOptions = {}\n\n    if (query.orderBy) {\n      if (utils.isString(query.orderBy)) {\n        query.orderBy = [\n          [query.orderBy, 'asc']\n        ]\n      }\n      for (var i = 0; i < query.orderBy.length; i++) {\n        if (utils.isString(query.orderBy[i])) {\n          query.orderBy[i] = [query.orderBy[i], 'asc']\n        }\n      }\n      queryOptions.sort = query.orderBy\n    }\n\n    if (query.skip) {\n      queryOptions.skip = +query.skip\n    }\n\n    if (query.limit) {\n      queryOptions.limit = +query.limit\n    }\n\n    return queryOptions\n  },\n\n  /**\n   * Turn an _id into an ObjectID if it isn't already an ObjectID.\n   *\n   * @method MongoDBAdapter#toObjectID\n   * @return {*}\n   */\n  toObjectID (mapper, id) {\n    if (id !== undefined && mapper.idAttribute === '_id' && typeof id === 'string' && ObjectID.isValid(id) && !(id instanceof ObjectID)) {\n      return new ObjectID(id)\n    }\n    return id\n  },\n\n  /**\n   * Return the foreignKey from the given record for the provided relationship.\n   *\n   * @method MongoDBAdapter#makeBelongsToForeignKey\n   * @return {*}\n   */\n  makeBelongsToForeignKey (mapper, def, record) {\n    return this.toObjectID(def.getRelation(), Adapter.prototype.makeBelongsToForeignKey.call(this, mapper, def, record))\n  },\n\n  /**\n   * Return the localKeys from the given record for the provided relationship.\n   *\n   * Override with care.\n   *\n   * @method MongoDBAdapter#makeHasManyLocalKeys\n   * @return {*}\n   */\n  makeHasManyLocalKeys (mapper, def, record) {\n    const self = this\n    const relatedMapper = def.getRelation()\n    const localKeys = Adapter.prototype.makeHasManyLocalKeys.call(self, mapper, def, record)\n    return localKeys.map(function (key) {\n      return self.toObjectID(relatedMapper, key)\n    })\n  },\n\n  /**\n   * Not supported.\n   *\n   * @method MongoDBAdapter#updateMany\n   */\n  updateMany () {\n    throw new Error('not supported!')\n  }\n})\n\n/**\n * Details of the current version of the `js-data-mongodb` module.\n *\n * @name module:js-data-mongodb.version\n * @type {Object}\n * @property {string} version.full The full semver value.\n * @property {number} version.major The major version number.\n * @property {number} version.minor The minor version number.\n * @property {number} version.patch The patch version number.\n * @property {(string|boolean)} version.alpha The alpha version value,\n * otherwise `false` if the current version is not alpha.\n * @property {(string|boolean)} version.beta The beta version value,\n * otherwise `false` if the current version is not beta.\n */\nexport const version = '<%= version %>'\n\nexport default MongoDBAdapter\n"],"names":["utils","Adapter","reserved","ObjectID"],"mappings":"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"}